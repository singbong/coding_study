"""
*그리디 알고리즘은 현재 상황에서 지금 당장 좋은 것만 고르는 방법을 의미한다.
*일반적인 그리디 알고리즘은 문제를 풀기 위한 최소한의 아이디어를 떠올릴 수 있는 능력을 요구합니다.
*그리디 해법은 그 정당성 분석이 중요하다
  * 단순히 가장 좋아 보이는 것을 반복적으로 선택해도 최적의 해를 구할 수 있는지 검토한다.

"""


A, B= map(int, input().split())
answer= 0
while 1:
    num= A//B*B  #A의 현재 값이 B로 나눌 수 없는 상황일 때 몇을 가감 시켜야 B로 나눌 수 있는지 알아보기 위핸 전처리 작업
    answer+= A-num  #A를 B의 배수로 만들기 위해 얼마를 - 시켜야 하는지 
    A = num         # A가 B의 배수가 되게 끔 -시킨 값을 A변수에 업데이트 시킨다. 
    if A < B:       #A가 1일때 종료
        break
    answer+=1       #나누었을때 answer 값 +1
    A= A//B         #A를 B로 나눈 몫으 A변수에 업데이팅 (이 구간에 A는 이미 B의 배수 형태)

answer = answer +A -1

print(answer)